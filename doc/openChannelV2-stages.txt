Шаги по открытию канала версии 2
================================

1. КЛИЕНТ: запускает (при создании компонента) действие openChannel/openChannelInComponent на клиенте
Оно сбрасывает состояние (полосу прокрутки и т.п.), выполняет hello с сервером, если необходимо,
решает капчу, выданную сервером по запросу клиента

2. КЛИЕНТ: посылается на сервер запрос `cmdGetOpenChannelLnurl` или `cmdGetOpenChannelApi`
От сервера клиентом после ожидается ответ `cmdOpenChannelLnurlResult` или `cmdOpenChannelApiResult`

3. СЕРВЕР: Получив `cmdGetOpenChannelLnurl`, сервер проверяет капчу, и если всё OK - создаёт пустую блокировку (`openChannelService.createOpenChannelRequest`) с уникальным UUID, а затем посылаёт её клиенту в виде `cmdOpenChannelLnurlResult` со строкой LNURL, где закодирован URL `/lnurl?uuid=...`, по которому будет выдан JSON объект для открытия канала

4. КЛИЕНТ: на стороне клиента команда `cmdOpenChannelLnurlResult` показывает QR код для сканирования

5. КОШЕЛЁК: кошелёк сканирует QR код, выданный в `cmdOpenChannelLnurlResult`, и идёт по указанному URL для получения JSON объекта с данными открытия канала (`/lnurl?uuid=`)

6. СЕРВЕР: получает HTTP запрос `/lnurl?uuid=` и выдаёт ответ через `openChannelService.getResponseOfBalanceLock`

7. СЕРВЕР: `getResponseOfBalanceLock` находит блокировку через `findFreeBalanceForLock`, которая была создана на #3
Найдя блокировку, сервер  проверяет балансы, подчищает старые или использованные блокировки, и если запрашиваемая локировка валидная - он формирует JSON ответ с данными - куда коннектится и т.п.. В этот момент сервер ещё не знает nodeID узла, который запрашивает канал. Размер временной локировки уже 16M

8. КОШЕЛЁК: дёргает callback урл вида /oc, указывая там свой uuid блокировки, nodeID, private и др. параметры

9. СЕРВЕР: получая от кошелька параметры (#8), сервер решает (`openChannelService.openChannelByCallback`)
    в этот момент: открывать или нет канал и какой ёмкости, если "да"
    Также в этот момент он находит WebSocket соединение, которое запросило блокировку, чтобы туда выводить результат
    Затем открывает канал через `openChannelService.openChannelByCallback`
